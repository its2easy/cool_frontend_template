@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function pi() {
  @return 3.14159265359;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}

// based on the work of http://www.melanieceraso.com/psd-to-css3/
@mixin drop-shadow($color: #000, $opacity: 100, $angle: 0, $distance: 0, $spread: 0, $size:0, $is-text-shadow: false) {
  $result: "";
  // calculate angle ∠
  $__ang: (180-$angle) * 3.14 / 180; //convert to radians

  // vertical shadow: offset-y = Sin(∠) * Hypotenuse
  $__offset-y: round(sin($__ang) * $distance);

  // horizontal shadow: offset-x = Cos(∠) * Hypotenuse
  $__offset-x: round(cos($__ang) * $distance);

  // spread-radius equals the Photoshop Size multiplied by the Photoshop Spread percentage
  $__spread-rad: $size * $spread/100;

  // blur-radius is equal to the Photoshop Size minus the <spread-radius>
  $__blur-rad: $size - $__spread-rad;

  // variable for scope context
  @if ($is-text-shadow) {
    $result: $__offset-x $__offset-y $__blur-rad $__spread-rad rgba(red($color), green($color), blue($color), $opacity/100);
  } @else {
    $result: $__offset-x $__offset-y $__blur-rad rgba(red($color), green($color), blue($color), $opacity/100);
  }
  box-shadow: $result;
}